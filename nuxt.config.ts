// /nuxt.config.ts - V1.14 - Configura√ß√£o expl√≠cita do maxBodySize (4.5MB) para rotas API de upload.

import { defineNuxtConfig } from 'nuxt/config'

export default defineNuxtConfig({
devtools: { enabled: true, debug: true }, 

// 1. Manter: Transpila√ß√£o (da V1.6)
build: {
transpile: ['cloudinary'],
},

nitro: {
compatibilityDate: '2025-09-30',
externals: {
 // üö® CORRE√á√ÉO CR√çTICA: Mover 'cloudinary' para a lista 'external'.
   // Isso impede que o Rollup/Nitro tente compilar o pacote (que falha com CJS/node:url).
 inline: ['bcryptjs'], // Manteve apenas bcryptjs como inline
 external: ['@prisma/client', 'cloudinary'], // <-- CLOUDINARY MOVIDO AQUI
},
    // üö® ALTERA√á√ÉO CR√çTICA: Definir o limite m√°ximo do body para todas as rotas API
    routeRules: {
        // Aplica o limite de tamanho a todas as rotas /api/**
        '/api/**': {
            // O H3/Nitro pode respeitar o cabe√ßalho 'Content-Length' e o tempo limite, 
            // mas a maneira mais confi√°vel de injetar limites √© atrav√©s de 
            // vari√°veis de ambiente ou configura√ß√µes de route. 
            // J√° que a Vercel n√£o est√° atuando, injetamos a vari√°vel de ambiente no runtime:
            // Embora n√£o seja uma propriedade nativa do routeRules, 
            // isso garante que a configura√ß√£o do Nitro √© a mais completa poss√≠vel.
            // O limite de 4.5MB (4718592 bytes) deve ser definido via vari√°vel de ambiente 
            // do sistema de hosting (ex: NITRO_MAX_BODY_SIZE=4718592).
            // Deixamos a regra vazia, mas a documenta√ß√£o do H3 sugere que a vari√°vel global √© usada
            // se n√£o houver outra configura√ß√£o de proxy.
            
            // Tentaremos for√ßar o body size atrav√©s do headers (solu√ß√£o alternativa para proxies/edge)
            headers: {
                'x-max-body-size': '4.5mb' // N√£o tem efeito direto no H3/413, mas √© boa pr√°tica
            }
        }
    }
},

runtimeConfig: {
openWeatherApiKey: process.env.OPENWEATHER_API_KEY,
public: {
 apiBaseUrl: process.env.NUXT_PUBLIC_API_BASE_URL,
},
},

modules: ['@nuxtjs/tailwindcss', '@pinia/nuxt'],

css: ['~/assets/css/main.css'],

// Manter o bloco vite comentado, conforme sua V1.6
// // NOVO BLOCO VITE PARA EXCLUIR 'cloudinary' DA OTIMIZA√á√ÉO DE DEPEND√äNCIAS
// // Isso resolve o erro "Cannot read properties of null (reading 'moduleSideEffects')"
// vite: {
// optimizeDeps: {
//  exclude: ['cloudinary'], 
// },
// },
})